{"version":3,"sources":["webpack://FormGen/webpack/universalModuleDefinition","webpack://FormGen/webpack/bootstrap","webpack://FormGen/./node_modules/shortid/lib/alphabet.js","webpack://FormGen/./node_modules/shortid/index.js","webpack://FormGen/./src/utils/genUUID.js","webpack://FormGen/./src/utils/dom.js","webpack://FormGen/./src/items/form.js","webpack://FormGen/./src/items/labels.js","webpack://FormGen/./src/items/input.js","webpack://FormGen/./src/items/select.js","webpack://FormGen/./src/items/radio.js","webpack://FormGen/./src/utils/setLocale.js","webpack://FormGen/./src/render.js","webpack://FormGen/./index.js","webpack://FormGen/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://FormGen/./node_modules/shortid/lib/is-valid.js","webpack://FormGen/./node_modules/nanoid/format.js","webpack://FormGen/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://FormGen/./node_modules/shortid/lib/generate.js","webpack://FormGen/./node_modules/shortid/lib/build.js","webpack://FormGen/./node_modules/shortid/lib/random/random-from-seed.js","webpack://FormGen/./node_modules/shortid/lib/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","nextValue","Math","floor","push","splice","shuffle","characters","seed","lookup","index","generateID","shortid_default","a","generate","createElement","tag","attr","$dom","document","keys","map","setAttribute","forEachElement","htmlList","cb","forEach","el","items_form","[object Object]","data","uuid","metaData","locale","localeKey","class","id","labels","super","labelText","setLocaleText","labelHtml","input_Input","type","toLowerCase","labelRaw","$wrapperContainer","setWrapper","innerHTML","getHtml","handleTpl","outerHTML","getElementById","styleClass","columnSize","defaultValue","setStyle","required","hintText","getValue","select_Select","text","items","selectItems","reduce","res","handleItemTpl","$radioItems","children","selected","radio_Radio","radioId","idx","findItemCollection","checked","getElementsByClassName","getLocaleStorage","window","localStorage","getItem","render","originSetItem","setItem","apply","arguments","event","Event","dispatchEvent","itemInstance","$container","resultValue","formId","containerId","handle","me","refresh","addEventListener","$formWrapper","getFormWrapper","mount","getRawHtml","e","getName","setValue","classList","add","destroy","htmlRaw","properties","param","button_default","__webpack_exports__","RegExp","replace","test","random","size","mask","log","LN2","step","ceil","bytes","byte","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","format","number","done","loopCounter","str","pow","counter","previousSeconds","REDUCE_TIME","version","clusterWorkerId","seconds","Date","now","_seed_","build","isValid","seedValue","worker","workerId","newCharacters","undefined"],"mappings":"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","file":"FormGen.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormGen\"] = factory();\n\telse\n\t\troot[\"FormGen\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","/**\n * @file gen UUID\n * @author skykun\n */\nimport shortid from 'shortid';\n\nfunction generateID() {\n    return shortid.generate();\n}\n\nexport {generateID};","/**\n * @file dom js\n * @author skykun\n */\n\nfunction createElement(tag, attr) {\n    if (typeof tag !== 'string') {\n        return;\n    }\n    let $dom = document.createElement(tag);\n    if (typeof attr === 'object') {\n        Object.keys(attr).map(key => {\n            $dom.setAttribute(key, attr[key]);\n        });\n    }\n    return $dom;\n}\n\nfunction forEachElement(htmlList, cb) {\n    [].forEach.call(htmlList, el => {\n        cb(el);\n    });\n}\n\nexport {createElement, forEachElement};","/**\n * @file form base class\n * @author skykun\n */\nimport {generateID} from '../utils/genUUID';\nimport {createElement} from '../utils/dom';\n\nclass Form {\n    constructor(data) {\n        this.uuid = generateID();\n        this.metaData = data;\n        this.locale = data.localeKey;\n    }\n\n    /** value validation */\n    checkValue() {}\n\n    /** get item name */\n    getName() {\n        return this.metaData.name;\n    }\n\n    /** get form value */\n    getValue() {}\n\n    /** set defaultValue for form */\n    setValue() {}\n\n    /** get form html */\n    getHtml() {}\n\n    /** set style */\n    setStyle() {}\n\n    setLocaleText(data) {\n        return data[this.locale] || false;\n    }\n\n    /** set item wrapper dom */\n    setWrapper() {\n        return createElement('div', {class: 'form-group', id: generateID()})\n    }\n}\n\nexport default Form;\n","/**\n * @file label\n * @author skykun\n */\nimport Form from './form';\nclass Label extends Form {\n    constructor(data) {\n        super(data);\n    }\n\n    getHtml() {\n        if (this.metaData.labelText && this.setLocaleText(this.metaData.labelText)) {\n            return `<label\n            for=\"${this.metaData.name}\"\n            id=\"${this.uuid}\" \n            class=\"form-genki-label\">${this.setLocaleText(this.metaData.labelText) || ''}${this.metaData.labelHtml || ''}</label> `;\n        }\n        else {\n            return '';\n        }\n    }\n}\n\nexport default Label;","/**\n * @file input file\n * @author skykun\n */\nimport Form from './form';\nimport Label from './labels';\n\nexport default class Input extends Form {\n    constructor(data) {\n        super(data);\n        this.type = this.metaData.type.toLowerCase();\n    }\n\n    /**\n     * @override\n     */\n    getHtml() {\n        let labelRaw = new Label(this.metaData);\n        let $wrapperContainer = this.setWrapper();\n        $wrapperContainer.innerHTML = `${labelRaw.getHtml()} ${this.handleTpl()}`;\n        return $wrapperContainer.outerHTML;\n    }\n\n    /**\n     * @override\n     */\n    getValue() {\n        let value = 'value';\n        if (this.type === 'CHECKBOX') {\n            value = 'checked';\n        }\n        return document.getElementById(this.uuid)[value];\n    }\n\n    /**\n     * @override\n     */\n    setValue(data) {\n        document.getElementById(this.uuid).value = data;\n    }\n\n    /**\n     * @override\n     */\n    setStyle() {\n        return (this.metaData.styleClass || 'form-control') + ` col-${this.metaData.columnSize || 12}`;\n    }\n\n    handleTpl() {\n        let defaultValue = this.metaData.defaultValue;\n        return `<input type=\"${this.type}\" \n        id=\"${this.uuid}\"\n        name=\"${this.metaData.name}\"\n        value=\"${defaultValue || ''}\"\n        class=\"form-genki-input ${this.setStyle()}\"\n        ${this.metaData.required ? 'required' : ''}\n        placeholder=\"${this.setLocaleText(this.metaData.hintText)}\"\n        ${this.type === 'checkbox' && defaultValue ? 'checked' : ''}>`;\n    }\n\n    /**\n     * @override\n     */\n    checkValue() {\n        if (this.metaData && !this.getValue()) {\n            document.getElementById(this.uuid).setAttribute('class', 'was-validated');\n        }\n    }\n}","/**\n * @file select type\n * @author skykun\n */\n\nimport Input from './input';\n\nexport default class Select extends Input {\n    constructor(data) {\n        super(data);\n        this.defaultValue = this.metaData.defaultValue;\n    }\n\n    handleItemTpl(data) {\n        return `<option value=\"${data.value}\" ${data.value === this.defaultValue ? 'selected': ''}>${this.setLocaleText(data.text)}</option>`;\n    }\n\n    /**\n     * @override\n     */\n    handleTpl() {\n        if (!this.metaData.items.length) {\n            throw new Error('please check select element items');\n        }\n        let selectItems = this.metaData.items.reduce((res, item) => {\n            res += this.handleItemTpl(item);\n            return res;\n        }, '');\n        // wrap select container\n        return `<select id=\"${this.uuid}\" name=\"${this.metaData.name}\" class=\"form-genki-select ${this.setStyle()}\">${selectItems}</select>`\n    }\n\n    /**\n     * @override\n     */\n    getValue() {\n        let $radioItems = document.getElementById(this.uuid);\n        let res = '';\n        [].forEach.call($radioItems.children, el => {\n            if (el.selected) {\n                res = el.value;\n            }\n        });\n        return res;\n    }\n}","/**\n * @file radio\n * @author skykun\n */\n\nimport Input from './input';\nimport {generateID} from '../utils/genUUID';\nimport Label from './labels';\nimport {forEachElement} from '../utils/dom';\n\nexport default class Radio extends Input {\n    constructor(data) {\n        super(data);\n        this.radioId = generateID();\n        this.defaultValue = this.metaData.defaultValue;\n    }\n\n    handleItemTpl(data) {\n        // restructure data for radio button form\n        let id = generateID();\n        let labelRaw = new Label({\n            labelText: data.text,\n            name: id,\n            localeKey: this.metaData.localeKey\n        });\n        return `${labelRaw.getHtml()} <input\n            type=\"radio\" value=\"${data.value}\" name=\"${this.metaData.name}\"\n            id=\"${id}\" class=\"form-genki-input radio-item-${this.radioId} ${this.setStyle()}\"\n            ${data.value === this.defaultValue ? 'checked' : ''}>`;\n    }\n\n    /**\n     * @override\n     */\n    handleTpl() {\n        return this.metaData.items.reduce((res, item, idx) => {\n            res += this.handleItemTpl(item);\n            return res;\n        }, '');\n    }\n\n    /**\n     * @override\n     */\n    getValue() {\n        let res = '';\n        forEachElement(this.findItemCollection(), el => {\n            if (el.checked) {\n                res = el.value;\n            }\n        });\n        return res;\n    }\n\n    /**\n     * @override\n     */\n    setValue(value) {\n        forEachElement(this.findItemCollection(), el => {\n            el.checked = (el.value == value);\n        });\n    }\n\n    findItemCollection() {\n        return document.getElementsByClassName(`radio-item-${this.radioId}`);\n    }\n}","/**\n * @file set locale: i18n\n * @author skykun\n */\n\nfunction getLocaleStorage(locale) {\n    if (locale) {\n        return locale;\n    }\n    return window.localStorage.getItem('LANG') || 'zh-CN';\n}\n\nfunction addStorageListener(handle) {\n    document.addEventListener('storageChanged', () => {\n        handle();\n    });\n}\n\nfunction resetLocalStorageEvent() {\n    var originSetItem = localStorage.setItem;\n    localStorage.setItem = function (key, value) {\n        // custom storage event\n        originSetItem.apply(this, arguments);\n        var event = new Event('storageChanged');\n        document.dispatchEvent(event);\n    };\n}\n\nexport {\n    getLocaleStorage,\n    addStorageListener,\n    resetLocalStorageEvent\n};","/**\n * @file render js\n * @author skykun\n */\nimport Input from './items/input';\nimport Select from './items/select';\nimport Button from './items/button';\nimport Radio from './items/radio';\n\nimport {addStorageListener, getLocaleStorage, resetLocalStorageEvent} from './utils/setLocale';\nimport {generateID} from './utils/genUUID';\nimport {createElement} from './utils/dom';\n\nclass Render {\n    constructor(data) {\n        resetLocalStorageEvent();\n        this.data = data;\n        this.locale = getLocaleStorage();\n        this.itemInstance = [];\n        this.$container = null;\n        this.resultValue = {};\n        this.formId = generateID();\n        this.containerId = data.containerId || 'form-container';\n        var me = this;\n        // reset locale while local storage changed\n        addStorageListener(function () {\n            me.locale = getLocaleStorage();\n            me.refresh();\n        });\n        this.$formWrapper = this.getFormWrapper();\n    }\n\n    render() {\n        this.$container = document.getElementById(this.containerId);\n        if (!this.$container) {\n            throw new Error('please check form container is provided');\n        }\n        this.mount();\n    }\n\n    mount() {\n        this.$formWrapper.innerHTML = this.getRawHtml(this.data);\n        this.$container.innerHTML = this.$formWrapper.outerHTML;\n    }\n\n    getFormData() {\n        this.itemInstance.forEach(e => {\n            this.resultValue[e.getName()] = e.getValue();\n        });\n        return this.resultValue;\n    }\n\n    /**\n     * set form data by data\n     * @param {object} data {key: value} \n     */\n    setFormValue(data) {\n        if (typeof data !== 'object') {\n            throw new Error('set form data must be object');\n        }\n        // stupid need to improve\n        this.itemInstance.forEach((e, idx) => {\n            Object.keys(data).map(key => {\n                if (key === e.getName()) {\n                    e.setValue(data[key]);\n                }\n            });\n        });\n    }\n\n    validateForm() {\n        document.getElementById(this.formId).classList.add('was-validated');\n    }\n\n    destroy() {\n        this.$container.innerHTML = '';\n    }\n\n    refresh() {\n        if (!this.$container) {\n            return;\n        }\n        this.destroy();\n        this.mount();\n    }\n\n    getFormWrapper() {\n        return createElement('form', {class: 'form-genki-block', id: this.formId});\n    }\n\n    getRawHtml(data) {\n        let item = null;\n        let htmlRaw = '';\n        this.itemInstance = [];\n        data.properties.forEach(property => {\n            let param = {\n                ...property,\n                localeKey: this.locale\n            };\n            switch(property.type) {\n                case 'TEXT':\n                    item = new Input(param);\n                    break;\n                case 'SELECT':\n                    item = new Select(param);\n                    break;\n                case 'BUTTON':\n                    item = new Button(param);\n                    break;\n                case 'RADIO':\n                    item = new Radio(param);\n                    break;\n                default: \n                    item = new Input(param);\n                    break;\n            }\n            htmlRaw += item.getHtml();\n            this.itemInstance.push(item);\n        });\n        return htmlRaw;\n    }\n}\n\nexport default Render;","/**\n * @file index\n * @author skykun\n */\nimport Render from './src/render';\n\nexport {Render};","'use strict';\n\nmodule.exports = 0;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  size = +size\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n"],"sourceRoot":""}